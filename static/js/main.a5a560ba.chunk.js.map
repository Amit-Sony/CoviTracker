{"version":3,"sources":["Covid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","data","setdata","Dailydata","setDailydata","Year","Date","getYear","getStateData","a","fetch","response","json","apidata","useEffect","style","backgroundColor","width","lineHeight","marginBottom","textAlign","className","scope","map","CurEl","state","confirmed","recovered","active","deaths","lastupdatedtime","statecode","padding","keys","datemyd","date","dailyconfirmed","dailyrecovered","dailydeceased","totalconfirmed","totalrecovered","totaldeceased","color","href","target","textDecoration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuGeA,EAnGA,WACX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACI,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAM,IAAIC,MAAOC,UACjBC,EAAY,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,0CADX,cACXC,EADW,gBAEIA,EAASC,OAFb,OAEXC,EAFW,OAIjBX,EAAQW,EAAO,WACfT,EAAaS,EAAO,mBALH,2CAAH,qDAalB,OAJAC,qBAAU,WACVN,MACG,IAGC,qCACA,oBACIO,MAAO,CAACC,gBAAgB,UAAWC,MAAM,OAAOC,WAAW,OAAQC,aAAe,OAAQC,UAAY,UAD1G,mCAEA,qBAAKC,UAAU,oBAAf,SACA,wBAAOA,UAAU,uBAAjB,UACI,gCACI,+BACA,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,uBAGJ,gCAEIrB,EAAKsB,KAAI,SAACC,GACN,OACI,+BACA,oBAAIF,MAAM,MAAV,SAAiBE,EAAMC,QACvB,6BAAKD,EAAME,YACX,6BAAKF,EAAMG,YACX,+BAAKH,EAAMI,OAAX,OACA,+BAAKJ,EAAMK,OAAX,OACA,+BAAKL,EAAMM,gBAAX,SANSN,EAAMO,qBAgB/B,oBACIhB,MAAO,CAACC,gBAAgB,UAAWC,MAAM,OAAOC,WAAW,OAAQC,aAAe,OAAQC,UAAY,UAD1G,+BAEA,qBAAKC,UAAU,4BAA4BN,MAAO,CAACiB,QAAU,cAA7D,SACA,wBAAOX,UAAU,sBAAjB,UACI,gCACI,+BACA,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,+BAGJ,gCAEInB,EAAUoB,KAAI,SAACC,GACX,OACI,qBAAIS,KAAMT,EAAMU,QAAhB,UACA,oBAAIZ,MAAM,MAAV,SAAiBE,EAAMW,OACvB,6BAAKX,EAAMY,iBACX,6BAAKZ,EAAMa,iBACX,+BAAKb,EAAMc,cAAX,OACA,+BAAKd,EAAMe,eAAX,OACA,+BAAKf,EAAMgB,eAAX,OACA,+BAAKhB,EAAMiB,cAAX,oBAShB,sBACA1B,MAAO,CAACiB,QAAU,YAAahB,gBAAkB,UAAW0B,MAAQ,UAAUtB,UAAY,UAD1F,2BAGO,KAAKf,EAHZ,IAGmB,mDACf,mBAAGsC,KAAK,8CAA8CC,OAAO,QAAQ7B,MAAO,CAAC8B,eAAgB,OAAQH,MAAQ,WAA7G,2CCzFDI,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5a560ba.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport './App.css'\r\n\r\n\r\n const Covid = () => {\r\n    const [data, setdata] = useState([]);\r\n        const [Dailydata, setDailydata] = useState([]);\r\n        \r\n        const Year =new Date().getYear();\r\n        const getStateData = async () =>{\r\n            const response =await fetch('https://api.covid19india.org/data.json');\r\n            const apidata =await response.json();\r\n            \r\n            setdata(apidata[\"statewise\"]);\r\n            setDailydata(apidata[\"cases_time_series\"]);\r\n        }\r\n\r\n        \r\n        useEffect(() => {\r\n        getStateData();\r\n        }, [])\r\n\r\n        return (\r\n            <>\r\n            <h2\r\n                style={{backgroundColor:'#FDD2BF' ,width:'100%',lineHeight:'68px', marginBottom : '20px', textAlign : 'center'}}>INDIA STATEWISE DATA </h2>\r\n            <div className=\"table-responsive \" >\r\n            <table className=\"table table-striped \">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">State</th>\r\n                    <th scope=\"col\">Confirmed</th>\r\n                    <th scope=\"col\">Recovered</th>\r\n                    <th scope=\"col\">Active</th>\r\n                    <th scope=\"col\">Deaths</th>\r\n                    <th scope=\"col\">Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    data.map((CurEl)=>{\r\n                        return(\r\n                            <tr key={CurEl.statecode}>\r\n                            <th scope=\"row\">{CurEl.state}</th>\r\n                            <td>{CurEl.confirmed}</td>\r\n                            <td>{CurEl.recovered}</td>\r\n                            <td>{CurEl.active} </td>\r\n                            <td>{CurEl.deaths} </td>\r\n                            <td>{CurEl.lastupdatedtime} </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table> \r\n            </div>\r\n\r\n\r\n            <h2\r\n                style={{backgroundColor:'#FDD2BF' ,width:'100%',lineHeight:'68px', marginBottom : '20px', textAlign : 'center'}}>INDIA Daily Data </h2>\r\n            <div className=\"d-flex  table-responsive \" style={{padding : '0px 1.2rem'}} >\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Daily Confirmed</th>\r\n                    <th scope=\"col\">Daily Recovered</th>\r\n                    <th scope=\"col\">Daily Deaths</th>\r\n                    <th scope=\"col\">Total Confirmed</th>\r\n                    <th scope=\"col\">Total Recovered</th>\r\n                    <th scope=\"col\">Total Deaths</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    Dailydata.map((CurEl)=>{\r\n                        return(\r\n                            <tr keys={CurEl.datemyd}>\r\n                            <th scope=\"row\">{CurEl.date}</th>\r\n                            <td>{CurEl.dailyconfirmed}</td>\r\n                            <td>{CurEl.dailyrecovered}</td>\r\n                            <td>{CurEl.dailydeceased} </td>\r\n                            <td>{CurEl.totalconfirmed} </td>\r\n                            <td>{CurEl.totalrecovered} </td>\r\n                            <td>{CurEl.totaldeceased} </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table> \r\n            </div>\r\n            \r\n            <div\r\n            style={{padding : '20px 50px', backgroundColor : '#171010', color : '#fafafa',textAlign : 'center'}}>\r\n                Copyright &copy;           \r\n                  {1900+Year } <span> Developed by : \r\n                <a href='https://www.instagram.com/developercubicle/' target='blank' style={{textDecoration: 'none' ,color : '#FFBCBC'}}> @DeveloperCubicals</a></span>\r\n            </div>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Covid;","import Covid from './Covid';\n\nfunction App() {\n  return (\n    <Covid />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}